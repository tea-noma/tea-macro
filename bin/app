#!/usr/bin/env node

var fs = require('fs')
  , opts = require('opts')
  , coffee=require('coffee-script')
  , teamacro = require('tea-macro');

var jsp = require("uglify-js").parser;
var pro = require("uglify-js").uglify;

opts.parse([
	// command line -m <mode> or -mode <mode>
    {
        'short': 'm',
        'long': 'mode',
        'description': 'output mode. code,stmt,expr. default is code.',
        'value': true,
        'required': false
    },
	// command line -p <path> or -path <path>
    {
        'short': 'p',
        'long': 'path',
        'description': 'input path.',
        'value': true,
        'required': false
    },
	// command line -s <path> or -setting <path>
    {
        'short': 's',
        'long': 'setting',
        'description': 'setting file path. (JSON style file)',
        'value': true,
        'required': false
    },
    // command line -t <target> or -target <target>
    {
        'short': 't',
        'long': 'target',
        'description': 'target file.',
        'value': true,
        'required': false
    }
]);

teamacro.registerCompiler('coffee',function(data){
	return coffee.compile(data);
});

teamacro.registerCompressor('js',function(data){
	var ast = jsp.parse(data);
	ast = pro.ast_mangle(ast);
	ast = pro.ast_squeeze(ast);
	return pro.gen_code(ast);
});

var setting=opts.get('setting');
if(setting==null){
	var mode=opts.get('mode') || 'code';
	var filepath=opts.get('path');
	teamacro.compileFromFile(filepath,mode);
}else{
	var target=opts.get('target') || null;
	teamacro.makeFromFile(setting, target);
}

